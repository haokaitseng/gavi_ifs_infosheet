message(paste("Error in rendering report for", i, ":", e))
})
}
func_render_pdfs_en <- function(current_iso3, language, current_year, ghed_year) {
quarto::quarto_render(
input = '00_infosheet_master.qmd',
output_file = paste0(current_iso3, '_infosheet_en.pdf'),
execute_params = list(current_iso3 = current_iso3,
language = "en",
current_year = 2024,
ghed_year = 2021
),
execute_dir = paste0("results/English")
)
}
vectors_current_iso3 <- c("BGD","BEN")
for (i in vectors_current_iso3) {
tryCatch({
func_render_pdfs_en(i)
}, error = function(e) {
message(paste("Error in rendering report for", i, ":", e))
})
}
?rename_if
??renme_if
library(dplyr)
?rename_if
?select_if
88860/4082913
quarto::quarto_render(
input = '00_infosheet_master.qmd',  # Specify the Quarto file
output_file = paste0(current_iso3, '_infosheet_en.pdf'),   # Output filename
execute_params = list(current_iso3 = current_iso3, # Parameters to pass
language = "en",
current_year = 2024,
ghed_year = 2021
),
execute_dir = paste0("output_infosheet/English/") #working directory for the rendering process
)
func_render_pdfs_en <- function(current_iso3, language, current_year, ghed_year) {
quarto::quarto_render(
input = '00_infosheet_master.qmd',  # Specify the Quarto file
output_file = paste0(current_iso3, '_infosheet_en.pdf'),   # Output filename
execute_params = list(current_iso3 = current_iso3, # Parameters to pass
language = "en",
current_year = 2024,
ghed_year = 2021
),
execute_dir = paste0("output_infosheet/English/") #working directory for the rendering process
)
}
func_render_pdfs_en <- function(
current_iso3, language, current_year, ghed_year, projected_year, jrf_year) {
quarto::quarto_render(
input = '00_infosheet_master.qmd',  # Specify the Quarto file
output_file = paste0(current_iso3, '_infosheet_en.pdf'),   # Output filename
execute_params = list(current_iso3 = current_iso3, # Parameters to pass
language = "en",
current_year = 2024,
ghed_year = 2021,
projected_year = 2029,
jrf_year = 2019
),
execute_dir = paste0("output_infosheet/English/") #working directory for the rendering process
)
}
vectors_current_iso3 <- c("BGD","BEN")
#ex1
for (i in vectors_current_iso3) {
tryCatch({
func_render_pdfs_en(i)
}, error = function(e) {
message(paste("Error in rendering report for", i, ":", e))
})
}
func_render_pdfs_en
func_render_pdfs_en <- function(
current_iso3, language) { #, current_year, ghed_year, projected_year, jrf_year
quarto::quarto_render(
input = '00_infosheet_master.qmd',  # Specify the Quarto file
output_file = paste0(current_iso3, '_infosheet_en.pdf'),   # Output filename
execute_params = list(current_iso3 = current_iso3, # Parameters to pass
language = "en"#,
# current_year = 2024,
# ghed_year = 2021,
# projected_year = 2029,
# jrf_year = 2019
),
execute_dir = paste0("output_infosheet/English/") #working directory for the rendering process
)
}
vectors_current_iso3 <- c("BGD","BEN")
func_render_pdfs_en("BEN","en")
func_render_pdfs_en <- function(
current_iso3, lang) { #, current_year, ghed_year, projected_year, jrf_year
quarto::quarto_render(
input = '00_infosheet_master.qmd',  # Specify the Quarto file
output_file = paste0(current_iso3, '_infosheet_en.pdf'),   # Output filename
execute_params = list(current_iso3 = current_iso3, # Parameters to pass
lang = "en"#,
# current_year = 2024,
# ghed_year = 2021,
# projected_year = 2029,
# jrf_year = 2019
),
execute_dir = paste0("output_infosheet/English/") #working directory for the rendering process
)
}
vectors_current_iso3 <- c("BGD","BEN")
func_render_pdfs_en("BEN","en")
func_render_pdfs_en <- function(
current_iso3, lang) { #, current_year, ghed_year, projected_year, jrf_year
quarto::quarto_render(
input = '00_infosheet_master.qmd',  # Specify the Quarto file
output_file = paste0(current_iso3, '_infosheet_en.pdf'),   # Output filename
execute_params = list(current_iso3 = current_iso3, # Parameters to pass
lang = "en"#,
# current_year = 2024,
# ghed_year = 2021,
# projected_year = 2029,
# jrf_year = 2019
),
execute_dir = getwd()#paste0("output_infosheet/English/") #working directory for the rendering process
)
}
vectors_current_iso3 <- c("BGD","BEN")
# try
func_render_pdfs_en("BEN","en")
0
func_render_pdfs_en <- function(
current_iso3, lang) { #, current_year, ghed_year, projected_year, jrf_year
quarto::quarto_render(
input = '00_infosheet_master.qmd',  # Specify the Quarto file
output_file = paste0(current_iso3, '_infosheet_en.pdf'),   # Output filename
execute_params = list(current_iso3 = current_iso3, # Parameters to pass
lang = "en"#,
# current_year = 2024,
# ghed_year = 2021,
# projected_year = 2029,
# jrf_year = 2019
),
execute_dir = getwd()#paste0("output_infosheet/English/") #working directory for the rendering process
)
}
vectors_current_iso3 <- c("BGD","BEN")
vectors_current_iso3
for (i in vectors_current_iso3) {
tryCatch({
func_render_pdfs_en(i, "en")
}, error = function(e) {
message(paste("Error in rendering report for", i, ":", e))
})
}
#################
# 1. English ####
#################
func_render_pdfs_en <- function(
current_iso3, lang) { #,current_year, ghed_year, projected_year, jrf_year
quarto::quarto_render(
input = '00_infosheet_master.qmd',  # Specify the Quarto file
output_file = paste0(current_iso3, '_infosheet_en.pdf'),   # Output filename
execute_params = list(current_iso3 = current_iso3, # Parameters to pass
lang = "en"#,
# current_year = 2024,
# ghed_year = 2021,
# projected_year = 2029,
# jrf_year = 2019
),
execute_dir = paste0("output_infosheet/English/") #working directory for the rendering process
)
}
# try
func_render_pdfs_en("BEN","en")
glue
#library(quarto)
library(glue)
library(here)
#################
# 1. English ####
#################
func_render_pdfs_en <- function(
current_iso3, lang) { #,current_year, ghed_year, projected_year, jrf_year
# output_file  = glue::glue("{species} {year}.pdf")
# final_output_file <- here::here("results", "reports", output_file)
#
quarto::quarto_render(
input = '00_infosheet_master.qmd',  # Specify the Quarto file
output_file = paste0(current_iso3, '_infosheet_en.pdf'),   # Output filename
execute_params = list(current_iso3 = current_iso3, # Parameters to pass
lang = "en"#,
# current_year = 2024,
# ghed_year = 2021,
# projected_year = 2029,
# jrf_year = 2019
)
#execute_dir = #working directory for the rendering process
#paste0("output_infosheet/English/")
)
}
for (i in vectors_current_iso3) {
tryCatch({
func_render_pdfs_en(i, "en")
}, error = function(e) {
message(paste("Error in rendering report for", i, ":", e))
})
}
install.packages(here)
install.packages("here")
library(here)
install.packages("here")
rm(list=ls())
# libraries
packages_CRAN <- c("here", #if error then: unlink("C:/Users/hktseng/AppData/Local/Programs/R/R-4.4.1/library/00LOCK", recursive = TRUE)
"glue", "here","tidyverse", "readxl", "janitor")
for (i in packages_CRAN) {
if (!i %in% rownames(installed.packages()) ) {
install.packages(i, repos = "http://cran.us.r-project.org")}
}
lapply(packages_CRAN, require, character.only = TRUE)
# mapping file: to get English and French speaking countries
country_mapping <- read_excel("I:/40. Data/IFS_mapping-files/country-mapping.xlsx",# no need to setwd("I:/") since it will
sheet = "country_mapping") |>
clean_names()
func_render_pdfs <- function(
current_iso3, # input parameters needs to match teh params in the quarto file
lang,
current_year) {
current_countryname <- country_mapping|>
filter(iso3==current_iso3)|>
pull(country_name_ifs)
print(current_countryname)
output_pdf <- glue::glue("Infosheet_{current_year}_{current_iso3}_{lang}.pdf")# the initial document rendered in the root directory
#setwd(here::here(""))# set directory to where the quarto file lives, i.e. 41. Analytics/InfoSheets re-design/2024/
quarto::quarto_render(
input = '00_infosheet_quarto.qmd',  # specify Quarto file
output_file = output_pdf, #paste0(current_iso3, '_infosheet_en.pdf'),   # output filename
execute_params = list(current_iso3 = current_iso3, # Parameters to pass
lang = lang,
current_year = current_year # for file name
# ghed_year = ghed_year,
# projected_year = projected_year,
# jrf_year = jrf_year
)
)
# copy and move the pdf document to desired subfolder by languages:
final_directory_en <- here::here("output_infosheet", "English", output_pdf)
final_directory_fr <- here::here("output_infosheet", "French", output_pdf)
file.copy(from = output_pdf,
to =  ifelse(lang == "en",
final_directory_en,
final_directory_fr)
)
file.remove(output_pdf) #remove the unwanted pdf in the folder where quarto file lives
#setwd(here::here()); getwd() # the directroy of qmd unchanged
}
# pilot tests for rendering single pdf####
func_render_pdfs("BEN", "en", 2024)
func_render_pdfs <- function(
current_iso3, # input parameters needs to match teh params in the quarto file
lang,
current_year) {
current_countryname <- country_mapping|> #for pdf name
filter(iso3==current_iso3)|>
pull(country_name_ifs)
output_pdf <- glue::glue("Infosheet_{current_year}_{current_countryname}_{current_iso3}_{lang}.pdf")# the initial document rendered in the root directory
#setwd(here::here(""))# set directory to where the quarto file lives, i.e. 41. Analytics/InfoSheets re-design/2024/
quarto::quarto_render(
input = '00_infosheet_quarto.qmd',  # specify Quarto file
output_file = output_pdf, #paste0(current_iso3, '_infosheet_en.pdf'),   # output filename
execute_params = list(current_iso3 = current_iso3, # Parameters to pass
lang = lang,
current_year = current_year # for file name
# ghed_year = ghed_year,
# projected_year = projected_year,
# jrf_year = jrf_year
)
)
# copy and move the pdf document to desired subfolder by languages:
final_directory_en <- here::here("output_infosheet", "English", output_pdf)
final_directory_fr <- here::here("output_infosheet", "French", output_pdf)
file.copy(from = output_pdf,
to =  ifelse(lang == "en",
final_directory_en,
final_directory_fr)
)
file.remove(output_pdf) #remove the unwanted pdf in the folder where quarto file lives
#setwd(here::here()); getwd() # the directroy of qmd unchanged
}
# pilot tests for rendering single pdf####
func_render_pdfs("BEN", "en", 2024)
# mapping file: to get English and French speaking countries
country_mapping <- read_excel("I:/40. Data/IFS_mapping-files/country-mapping.xlsx",# no need to setwd("I:/") since it will
sheet = "country_mapping") |>
clean_names()|>
filter(!is.na(cofi_group))
View(country_mapping)
country_mapping$iso3
vectors_iso3_en <- country_mapping|>
filter(cofi_group!="Fully self-financing")|>
pull(iso3)
vectors_iso3_en
#########################
# 2. English for all ####
#########################
vectors_current_iso3 <- c("BGD","BEN")
vectors_current_iso3
for (i in vectors_iso3_en) {
tryCatch({
func_render_pdfs(i, "en", 2024)
}, error = function(e) {
message(paste("Error in rendering report for", i, ":", e))
})
}
# pilot tests for rendering single pdf####
func_render_pdfs("BEN", "en", 2024)
# pilot tests for rendering single pdf####
func_render_pdfs("BEN", "en", 2024)
func_render_pdfs <- function(
current_iso3, # input parameters needs to match the params in the quarto file
lang,
current_year) {
current_countryname <- country_mapping|> #for pdf name
filter(iso3==current_iso3)|>
pull(country_name_ifs)
output_pdf <- glue::glue("Infosheet_{current_year}_{current_countryname}_{current_iso3}_{lang}.pdf")# the initial document rendered in the root directory
#setwd(here::here(""))# set directory to where the quarto file lives, i.e. 41. Analytics/InfoSheets re-design/2024/
quarto::quarto_render(
input = '00_infosheet_quarto.qmd',  # specify Quarto file
output_file = output_pdf, #paste0(current_iso3, '_infosheet_en.pdf'),   # output filename
execute_params = list(current_iso3 = current_iso3, # Parameters to pass
lang = lang,
current_year = current_year # for file name
# ghed_year = ghed_year,
# projected_year = projected_year,
# jrf_year = jrf_year
)
)
# copy and move the pdf document to desired subfolder by languages:
final_directory_en <- here::here("output_infosheet", "English", output_pdf)
final_directory_fr <- here::here("output_infosheet", "French", output_pdf)
file.copy(from = output_pdf,
to =  ifelse(lang == "en",
final_directory_en,
final_directory_fr)
)
file.remove(output_pdf) #remove the unwanted pdf in the folder where quarto file lives
#setwd(here::here()); getwd() # the directroy of qmd unchanged
}
# pilot tests for rendering single pdf####
func_render_pdfs("BEN", "en", 2024)
# pilot tests for rendering single pdf####
func_render_pdfs("BEN", "en", 2024)
View(country_mapping)
func_render_pdfs <- function(
current_iso3, # input parameters needs to match the params in the quarto file
current_country_en,
lang,
current_year) {
current_country_en <- country_mapping|> #pdf names all written in English
filter(iso3==current_iso3)|>
pull(country_name_ifs)
output_pdf <- glue::glue("Infosheet_{current_year}_{current_country_en}_{current_iso3}_{lang}.pdf")# the initial document rendered in the root directory
#setwd(here::here(""))# set directory to where the quarto file lives, i.e. 41. Analytics/InfoSheets re-design/2024/
quarto::quarto_render(
input = '00_infosheet_quarto.qmd',  # specify Quarto file
output_file = output_pdf, #paste0(current_iso3, '_infosheet_en.pdf'),   # output filename
execute_params = list(current_iso3 = current_iso3, # Parameters to pass
lang = lang,
current_year = current_year # for file name
# ghed_year = ghed_year,
# projected_year = projected_year,
# jrf_year = jrf_year
)
)
# copy and move the pdf document to desired subfolder by languages:
final_directory_en <- here::here("output_infosheet", "English", output_pdf)
final_directory_fr <- here::here("output_infosheet", "French", output_pdf)
file.copy(from = output_pdf,
to =  ifelse(lang == "en",
final_directory_en,
final_directory_fr)
)
file.remove(output_pdf) #remove the unwanted pdf in the folder where quarto file lives
#setwd(here::here()); getwd() # the directroy of qmd unchanged
}
func_render_pdfs("BEN", "Benin","en", 2024)
vectors_iso3_en <- country_mapping|>
filter(cofi_group!="Fully self-financing")|>
pull(iso3, country_name_ifs)
vectors_iso3_en
vectors_iso3_en <- country_mapping|>
filter(cofi_group!="Fully self-financing")|>
pull(iso3)
vectors_countryname_en <- country_mapping|>
filter(cofi_group!="Fully self-financing")|>
pull(country_name_ifs)
vectors_countryname_en
vectors_iso3_en <- country_mapping|>
filter(cofi_group!="Fully self-financing")|>
pull(iso3)
vectors_countryname_en <- country_mapping|>
filter(cofi_group!="Fully self-financing")|>
pull(country_name_ifs)
for (i in seq_along(vectors_iso3_en) ) {
iso3 <- vectors_iso3_en[i]
country_name <- vectors_countryname_en[i]
print(paste0(iso3, country_name)
)
# tryCatch({
#   func_render_pdfs(i, j,"en", 2024)
# }, error = function(e) {
#   message(paste("Error in rendering report for", i, ":", e))
# })
}
vectors_iso3_en <- country_mapping|>
filter(cofi_group!="Fully self-financing")|>
pull(iso3)
vectors_countryname_en <- country_mapping|>
filter(cofi_group!="Fully self-financing")|>
pull(country_name_ifs)
# iterating the loop
for (i in seq_along(vectors_iso3_en) ) {
i_iso3 <- vectors_iso3_en[i]
i_countryname <- vectors_countryname_en[i]
tryCatch({
func_render_pdfs(i_iso3, i_countryname,"en", 2024)
}, error = function(e) {
message(paste("Error in rendering report for", i, ":", e))
})
}
func_render_pdfs <- function(
current_iso3, # input parameters needs to match the params in the quarto file
current_country_en,
lang,
current_year) {
output_pdf <- glue::glue("Infosheet_{current_year}_{current_country_en}_{current_iso3}_{lang}.pdf")# the initial document rendered in the root directory
#setwd(here::here(""))# set directory to where the quarto file lives, i.e. 41. Analytics/InfoSheets re-design/2024/
quarto::quarto_render(
input = '00_infosheet_quarto.qmd',  # specify Quarto file
output_file = output_pdf, #paste0(current_iso3, '_infosheet_en.pdf'),   # output filename
execute_params = list(current_iso3 = current_iso3, # Parameters to pass
current_country_en = current_country_en,
lang = lang,
current_year = current_year, # for file name
# ghed_year = ghed_year,
# projected_year = projected_year,
# jrf_year = jrf_year
)
)
# copy and move the pdf document to desired subfolder by languages:
final_directory_en <- here::here("output_infosheet", "English", output_pdf)
final_directory_fr <- here::here("output_infosheet", "French", output_pdf)
file.copy(from = output_pdf,
to =  ifelse(lang == "en",
final_directory_en,
final_directory_fr)
)
file.remove(output_pdf) #remove the unwanted pdf in the folder where quarto file lives
#setwd(here::here()); getwd() # the directroy of qmd unchanged
}
func_render_pdfs("BEN", "Benin","en", 2024)
func_render_pdfs <- function(
current_iso3, # input parameters needs to match the params in the quarto file
current_country_en,
lang,
current_year) {
output_pdf <- glue::glue("Infosheet_{current_year}_{current_country_en}_{current_iso3}_{lang}.pdf")# the initial document rendered in the root directory
#setwd(here::here(""))# set directory to where the quarto file lives, i.e. 41. Analytics/InfoSheets re-design/2024/
quarto::quarto_render(
input = '00_infosheet_quarto.qmd',  # specify Quarto file
output_file = output_pdf, #paste0(current_iso3, '_infosheet_en.pdf'),   # output filename
execute_params = list(current_iso3 = current_iso3, # Parameters to pass
current_country_en = current_country_en,
lang = lang,
current_year = current_year # for file name
# ghed_year = ghed_year,
# projected_year = projected_year,
# jrf_year = jrf_year
)
)
# copy and move the pdf document to desired subfolder by languages:
final_directory_en <- here::here("output_infosheet", "English", output_pdf)
final_directory_fr <- here::here("output_infosheet", "French", output_pdf)
file.copy(from = output_pdf,
to =  ifelse(lang == "en",
final_directory_en,
final_directory_fr)
)
file.remove(output_pdf) #remove the unwanted pdf in the folder where quarto file lives
#setwd(here::here()); getwd() # the directroy of qmd unchanged
}
func_render_pdfs("BEN", "Benin","en", 2024)
func_render_pdfs("MDG", "Madagascar","fr", 2024)
vectors_iso3_en <- country_mapping|>
filter(cofi_group!="Fully self-financing")|>
pull(iso3)
vectors_countryname_en <- country_mapping|>
filter(cofi_group!="Fully self-financing")|>
pull(country_name_ifs)
# iterating the loop
for (i in seq_along(vectors_iso3_en) ) {
i_iso3 <- vectors_iso3_en[i]
i_countryname <- vectors_countryname_en[i]
tryCatch({
func_render_pdfs(i_iso3,
i_countryname,
"en",
2024)
}, error = function(e) {
message(paste("Error in rendering report for", i, ":", e))
})
}
