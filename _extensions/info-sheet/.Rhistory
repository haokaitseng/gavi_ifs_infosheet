tab
plot_data <- list(mtcars$mpg, mtcars$hp, mtcars$qsec)
View(plot_data)
mtcars
plot_data
View(plot_data)
plot_data[[1]]
table <- data.frame(
Variables = c("mpg", "hp", "qsec"),
Histogram = "",
Density = "",
Bar = "",
Line = ""
)
table <- data.frame(
Variables = c("mpg", "hp", "qsec"),
Histogram = "",
Density = "",
Bar = "",
Line = ""
)
lines <- lapply(1:3, \(x) data.frame(x = 1:10, y = rnorm(10)))
tt(table) |>
plot_tt(j = 2, fun = "histogram", data = plot_data) |>
plot_tt(j = 3, fun = "density", data = plot_data, color = "darkgreen") |>
plot_tt(j = 4, fun = "bar", data = list(2, 3, 6), color = "orange") |>
plot_tt(j = 5, fun = "line", data = lines, color = "blue") |>
style_tt(j = 2:5, align = "c")
library(tinytable)
library(ggplot2)
#| include: false
#pkgload::load_all()
options(tinytable_quarto_figure = TRUE)
options(tinytable_print_output = "typst")
tt(table) |>
plot_tt(j = 2, fun = "histogram", data = plot_data) |>
plot_tt(j = 3, fun = "density", data = plot_data, color = "darkgreen") |>
plot_tt(j = 4, fun = "bar", data = list(2, 3, 6), color = "orange") |>
plot_tt(j = 5, fun = "line", data = lines, color = "blue") |>
style_tt(j = 2:5, align = "c")
penguins <- read.csv(
"https://vincentarelbundock.github.io/Rdatasets/csv/palmerpenguins/penguins.csv",
na.strings = "") |> na.omit()
View(penguins)
View(penguins)
dat <- split(penguins, penguins$species)
View(dat)
dat[["Adelie"]]
dat[["Adelie"]]
body <- lapply(dat, \(x) x$body_mass_g)
View(body)
View(dat)
dat[["Gentoo"]]
dat[["Gentoo"]]
dat_projection <- read_excel("41. Analytics/cofi-projections/xlsx/cofi-projections_2024-11-07.xlsx")|>  clean_names()
dat_projection <- read_excel("41. Analytics/cofi-projections/xlsx/cofi-projections_2024-11-07.xlsx")
library(readxl)
dat_projection <- read_excel("41. Analytics/cofi-projections/xlsx/cofi-projections_2024-11-07.xlsx")
dat_projection <- read_excel("cofi-projections_2024-11-07.xlsx")
getwd()
dat_projection <- read_excel("cofi-projections_2024-11-08.xlsx")
temp <- dat_projection |>
filter(iso3 == "BEN", year == 2024)  |>
group_by(vaccine_group)|>
summarise(cofi_usd=sum(cofi_usd,na.rm=T),
gavi_support_usd=sum(gavi_support_usd,na.rm=T), na.rm=T)|>
pivot_longer(cols = c("cofi_usd", "gavi_support_usd"),
values_to = "cost",
names_to = "category")  |>
mutate(category = case_when(
category == "cofi_usd" ~ "Co-financing obligations (US$)",
category == "gavi_support_usd" ~ "Gavi payments for vaccines (US$)")
)|>
ungroup()|>
group_by(vaccine_group)  |>
mutate(percentage = cost / sum(cost),
percentage = if_else(percentage==0,NA,percentage))
if(!require(kableExtra)) install.packages("kableExtra", repos = "http://cran.us.r-project.org")
if(!require(webshot)) install.packages("webshot", repos = "http://cran.us.r-project.org")
if(!require(tinytable)) install.packages("tinytable", repos = "http://cran.us.r-project.org")
library(gt)
library(tidyverse)
library(readxl)
library(janitor)
library(ggplot2)
library(gavir) #devtools::install_github("joshualorin/gavir")
library(scales)
library(knitr)
library(gavir)
temp <- dat_projection |>
filter(iso3 == "BEN", year == 2024)  |>
group_by(vaccine_group)|>
summarise(cofi_usd=sum(cofi_usd,na.rm=T),
gavi_support_usd=sum(gavi_support_usd,na.rm=T), na.rm=T)|>
pivot_longer(cols = c("cofi_usd", "gavi_support_usd"),
values_to = "cost",
names_to = "category")  |>
mutate(category = case_when(
category == "cofi_usd" ~ "Co-financing obligations (US$)",
category == "gavi_support_usd" ~ "Gavi payments for vaccines (US$)")
)|>
ungroup()|>
group_by(vaccine_group)  |>
mutate(percentage = cost / sum(cost),
percentage = if_else(percentage==0,NA,percentage))
View(temp)
temp <- dat_projection |>
filter(iso3 == "BEN", year == 2024)  |>
group_by(vaccine_group)|>
summarise(cofi_usd=sum(cofi_usd,na.rm=T),
gavi_support_usd=sum(gavi_support_usd,na.rm=T))|>
pivot_longer(cols = c("cofi_usd", "gavi_support_usd"),
values_to = "cost",
names_to = "category")  |>
mutate(category = case_when(
category == "cofi_usd" ~ "Co-financing obligations (US$)",
category == "gavi_support_usd" ~ "Gavi payments for vaccines (US$)")
)|>
ungroup()|>
group_by(vaccine_group)  |>
mutate(percentage = cost / sum(cost),
percentage = if_else(percentage==0,NA,percentage))
temp_split_by_vaccine <- split(temp, temp$vaccine_group)
View(temp_split_by_vaccine)
table <- data.frame(
"Species" = names(temp_split_by_vaccine),
"Body Mass" = "",
check.names = FALSE
)
View(table)
plot_function <- function(d, color = "black", ...) {
ggplot(d,
aes(fill = category,
y = percentage,
x = vaccine_group
)) +
geom_bar(position = "fill",
stat = "identity",
width=0.8)
}
table|>
tt()|>
plot_tt(j = 2, fun = plot_function, data = temp_split_by_vaccine, height = 2)
library(readxl)
dat_projection <- read_excel("cofi-projections_2024-11-08.xlsx")
if(!require(kableExtra)) install.packages("kableExtra", repos = "http://cran.us.r-project.org")
if(!require(webshot)) install.packages("webshot", repos = "http://cran.us.r-project.org")
if(!require(tinytable)) install.packages("tinytable", repos = "http://cran.us.r-project.org")
library(gt)
library(tidyverse)
library(readxl)
library(janitor)
library(ggplot2)
library(gavir) #devtools::install_github("joshualorin/gavir")
library(scales)
library(knitr)
library(gavir)
temp <- dat_projection |>
filter(iso3 == "BEN", year == 2024)  |>
group_by(vaccine_group)|>
summarise(cofi_usd=sum(cofi_usd,na.rm=T),
gavi_support_usd=sum(gavi_support_usd,na.rm=T))|>
pivot_longer(cols = c("cofi_usd", "gavi_support_usd"),
values_to = "cost",
names_to = "category")  |>
mutate(category = case_when(
category == "cofi_usd" ~ "Co-financing obligations (US$)",
category == "gavi_support_usd" ~ "Gavi payments for vaccines (US$)")
)|>
ungroup()|>
group_by(vaccine_group)  |>
mutate(percentage = cost / sum(cost),
percentage = if_else(percentage==0,NA,percentage))
temp_split_by_vaccine <- split(temp, temp$vaccine_group)
table <- data.frame(
"Species" = names(temp_split_by_vaccine),
"Body Mass" = "",
check.names = FALSE
)
plot_function <- function(d, color = "black", ...) {
ggplot(d,
aes(fill = category,
y = percentage,
x = vaccine_group
)) +
geom_bar(position = "fill",
stat = "identity",
width=0.8)
}
table|>
tt()|>
plot_tt(j = 2, fun = plot_function, data = temp_split_by_vaccine, height = 2)
